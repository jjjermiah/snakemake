[project]
name = "snakemake"
version = "8.30.0"
description = "Workflow management system to create reproducible and scalable data analyses"
readme = { content-type = "text/markdown", text = """
  Snakemake is a workflow management system that aims to reduce the
  complexity of creating workflows by providing a fast and comfortable
  execution environment, together with a clean and modern specification
  language in python style. Snakemake workflows are essentially Python
  scripts extended by declarative code to define rules. Rules describe
  how to create output files from input files.
""" }
requires-python = ">= 3.11"
license = { text = "MIT" }
authors = [{ name = "Johannes KÃ¶ster", email = "johannes.koester@uni-due.de" }]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
]

dependencies = [
  "appdirs",
  "immutables",
  "configargparse",
  "connection_pool>=0.0.3",
  "docutils",
  "gitpython",
  "humanfriendly",
  "jinja2>=3.0,<4.0",
  "jsonschema",
  "nbformat",
  "packaging",
  "psutil",
  "pulp>=2.3.1,<2.10",
  "pyyaml",
  "requests>=2.8.1,<3.0",
  "reretry",
  "smart-open>=4.0,<8.0",
  "snakemake-interface-executor-plugins>=9.3.2,<10.0",
  "snakemake-interface-common>=1.17.0,<2.0",
  "snakemake-interface-storage-plugins>=3.2.3,<4.0",
  "snakemake-interface-report-plugins>=1.1.0,<2.0.0",
  "tabulate",
  "throttler",
  "wrapt",
  "yte>=1.5.5,<2.0",
  "dpath>=2.1.6,<3.0.0",
  "conda-inject>=1.3.1,<2.0",
]

[project.urls]
Homepage = "https://snakemake.github.io"
Documentation = "https://snakemake.readthedocs.io"
Source = "https://github.com/snakemake/snakemake"

[project.optional-dependencies]
messaging = ["slack_sdk"]
pep = ["eido", "peppy"]
reports = ["pygments"]

[project.scripts]
snakemake = "snakemake.cli:main"

[build-system]
requires = ["setuptools>=42", 'tomli; python_version < "3.11"']
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["snakemake", "snakemake.*"]

[tool.setuptools.package-data]
"*" = [
  "*.css",
  "*.sh",
  "*.html",
  "*.jinja2",
  "*.js",
  "*.svg",
  "Snakefile.*",
  "*.rst",
]

[tool.versioneer]
VCS = "git"
style = "pep440"
tag_prefix = "v"
versionfile_build = "snakemake/_version.py"
versionfile_source = "snakemake/_version.py"

[tool.codespell]
# Ref: https://github.com/codespell-project/codespell#using-a-config-file
skip = '.git,*.pdf,*.svg,versioneer.py,*.css,test_*'
check-hidden = true
ignore-regex = '^\s*"image/\S+": ".*|\b[Mm]anuel[. ][Hh]oltgrewe\b'
ignore-words-list = 'testin'

####################################################################
# Pixi Configuration
####################################################################

[tool.pixi.project]
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64", "osx-arm64", "win-64", "osx-64", "linux-aarch64"]

[tool.pixi.pypi-dependencies]
snakemake = { path = ".", editable = true }

[tool.pixi.environments]
dev = { features = [
  # optional dependencies
  "messaging",
  "pep",
  "reports",
  # plugins
  "plugin-interfaces",
  "storage-plugins",
  "executor-plugins",
  # dev 
  "test",
  "docs",
  "style",
] }
test = { features = [
  "test",
  "plugin-interfaces",
  "storage-plugins",
  "executor-plugins",
] }
docs = { features = ["docs", "plugin-interfaces"] }
quality = { features = ["style"] }
publish = { features = ["publish"] }

#----------------------- Plugins -----------------------------

# Plugin interfaces
[tool.pixi.feature.plugin-interfaces.pypi-dependencies]
snakemake-interface-executor-plugins = ">=9.3.2, <10"
snakemake-interface-storage-plugins = ">=3.3.0, <4"

# Storage plugins
[tool.pixi.feature.storage-plugins.pypi-dependencies]
snakemake-storage-plugin-http = "*"
snakemake-storage-plugin-s3 = "*"
snakemake-storage-plugin-fs = "*"

# Executor plugins
[tool.pixi.feature.executor-plugins.pypi-dependencies]
snakemake-executor-plugin-cluster-generic = "*"

#------------------------ Test -------------------------------  

[tool.pixi.feature.test.dependencies]
pytest = ">=8.3.5,<9"
pytest-mock = ">=3.14.0,<4"
pytest-cov = ">=6.0.0,<7"
pytest-split = ">=0.10.0,<0.11"
graphviz = ">=12.2.1,<13"
oauth2client = ">=4.1.3,<5"
numpy = ">=2.2.3,<3"
glpk = ">=5.0,<6"
pulp = ">=2.8.0,<3"
boto3 = ">=1.37.9,<2"
packaging = ">=24.2,<25"
reretry = ">=0.11.8,<0.12"
smart_open = ">=7.1.0,<8"
pyyaml = ">=6.0.2,<7"
responses = ">=0.25.6,<0.26"
gitpython = ">=3.1.44,<4"
pytools = ">=2024.1.6,<2026"
pandoc = ">=3.6.3,<4"
crc32c = ">=2.7.1,<3"
nbformat = ">=5.10.4,<6"
filelock = ">=3.17.0,<4"
humanfriendly = ">=10.0,<11"
pandas = ">=2.2.3,<3"
pygments = ">=2.19.1,<3"
wrapt = ">=1.17.2,<2"
psutil = ">=7.0.0,<8"
throttler = ">=1.2.2,<2"
immutables = ">=0.21,<0.22"
pysftp = ">=0.2.9,<0.3"
yte = ">=1.5.7,<2"
ftputil = ">=5.1.0,<6"
requests = ">=2.32.3,<3"
dpath = ">=2.2.0,<3"
httpretty = ">=1.1.4,<2"
appdirs = ">=1.4.4,<2"
polars = ">=1.24.0,<2"
jsonschema = ">=4.23.0,<5"
requests-mock = ">=1.12.1,<2"
docutils = ">=0.20.1,<0.22"
tabulate = ">=0.9.0,<0.10"
configargparse = ">=1.7,<2"

[tool.pixi.feature.test.target.linux-64.dependencies]
environment-modules = "*"
xorg-libxrender = "*"
xorg-libxext = "*"
xorg-libxau = "*"
xorg-libxdmcp = "*"
xorg-libsm = "*"
stress-ng = "*"
nodejs = "*"
apptainer = "*"
squashfuse = "*"
cwltool = "*"
cwl-utils = "*"

#------------------------ Docs -------------------------------
[tool.pixi.feature.docs.dependencies]
wrapt = ">=1.17.2,<2"
pyyaml = ">=6.0.2,<7"
requests = ">=2.32.3,<3"
appdirs = ">=1.4.4,<2"
docutils = ">=0.18.1,<0.21"
throttler = ">=1.2.2,<2"
configargparse = ">=1.7,<2"
jsonschema = ">=4.23.0,<5"
gitpython = ">=3.1.44,<4"
sphinx = ">=7.2.6,<8"
sphinx-argparse = ">=0.4.0,<0.6"
sphinx_rtd_theme = ">=3.0.1,<4"
sphinxawesome-theme = ">=5.2.0,<6"
recommonmark = ">=0.7.1,<0.8"
commonmark = ">=0.9.1,<0.10"
myst-parser = ">=3.0.1,<5"
sphinxcontrib-napoleon = ">=0.7,<0.8"
humanfriendly = ">=10.0,<11"

[tool.pixi.feature.docs.tasks]
build-docs = { cmd = 'make html SPHINXOPTS="-W --keep-going -n"', description = "Build the documentation in the docs/ directory", cwd = "docs" }
docs = { cmd = "python -m http.server 8000 --directory docs/_build/html", description = "Serve the documentation on http://localhost:8000", depends-on = [
  "build-docs",
] }

#------------------------ Style -------------------------------
[tool.pixi.feature.style.dependencies]
black = "*"

[tool.pixi.feature.style.tasks]
format = { cmd = "black snakemake tests/**/*.py", description = "Format the code" }

#------------------------ publish -------------------------------
[tool.pixi.feature.publish.dependencies]
setuptools = ">=75.8.2,<76"
twine = ">=6.1.0,<7"
python-build = ">=1.2.2,<2"

[tool.pixi.feature.publish.tasks]
build = { cmd = "python -m build", description = "Build the package into the dist/ directory" }
check-build = { cmd = "python -m twine check dist/*", depends-on = [
  "build",
], description = "Check that the package can be uploaded" }
