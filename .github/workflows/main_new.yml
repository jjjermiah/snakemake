name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  # Cancel concurrent flows on PRs
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ################################################################################################
  # Quality Check: Run linting using Ruff & Mypy
  ################################################################################################
  formatting:
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: write # for marocchino/sticky-pull-request-comment to create or update PR comment

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Pixi
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          environments: "quality"
          pixi-version: v0.42.1
          cache: false # no pixi.lock
          locked: false

      - name: Run black
        run: pixi run -e quality format --check --diff .

      - name: Comment PR
        if: github.event_name == 'pull_request' && failure()
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        with:
          message: "Please format your code with [black](https://black.readthedocs.io): `black snakemake tests/*.py`."
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ################################################################################################
  # Testing: Run tests using Snakemake
  ################################################################################################
  testing:
    strategy:
      matrix:
        test_group: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        py_ver:
          - "3.11"
          - "3.12"
        shell:
          - bash
          - dash # for py 3.12 also test dash as default shell (snakemake will still use bash for shell commands)
        exclude:
          - shell: dash 
            py_ver: "3.11"
    runs-on: ubuntu-latest
    needs: formatting
    env:
      AWS_AVAILABLE: "${{ secrets.AWS_ACCESS_KEY_ID }}"
      GCP_AVAILABLE: "${{ secrets.GCP_SA_KEY }}"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
